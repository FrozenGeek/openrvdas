##########
# Sample YAML cruise definition file for NBP1406, created by hacked-up
# script at test/NBP1406/create_cruise_definition.py.

# Note that the one hack necessary is that YAML interprets 'off' (when not
# quoted) as the literal 'False'. So YAML needs to quote 'off'.

########################################
cruise:
  end: '2014-07-01'
  id: NBP1406
  start: '2014-06-01'

########################################
loggers:
  PCOD:
    configs:
    - PCOD->off
    - PCOD->net
    - PCOD->file/net/db
  adcp:
    configs:
    - adcp->off
    - adcp->net
    - adcp->file/net/db
  eng1:
    configs:
    - eng1->off
    - eng1->net
    - eng1->file/net/db
  gp02:
    configs:
    - gp02->off
    - gp02->net
    - gp02->file/net/db
  grv1:
    configs:
    - grv1->off
    - grv1->net
    - grv1->file/net/db
  gyr1:
    configs:
    - gyr1->off
    - gyr1->net
    - gyr1->file/net/db
  hdas:
    configs:
    - hdas->off
    - hdas->net
    - hdas->file/net/db
  knud:
    configs:
    - knud->off
    - knud->net
    - knud->file/net/db
  mbdp:
    configs:
    - mbdp->off
    - mbdp->net
    - mbdp->file/net/db
  mwx1:
    configs:
    - mwx1->off
    - mwx1->net
    - mwx1->file/net/db
  pco2:
    configs:
    - pco2->off
    - pco2->net
    - pco2->file/net/db
  pguv:
    configs:
    - pguv->off
    - pguv->net
    - pguv->file/net/db
  rtmp:
    configs:
    - rtmp->off
    - rtmp->net
    - rtmp->file/net/db
  s330:
    configs:
    - s330->off
    - s330->net
    - s330->file/net/db
  seap:
    configs:
    - seap->off
    - seap->net
    - seap->file/net/db
  svp1:
    configs:
    - svp1->off
    - svp1->net
    - svp1->file/net/db
  tsg1:
    configs:
    - tsg1->off
    - tsg1->net
    - tsg1->file/net/db
  tsg2:
    configs:
    - tsg2->off
    - tsg2->net
    - tsg2->file/net/db

########################################
modes:
  'off':
    PCOD: PCOD->off
    adcp: adcp->off
    eng1: eng1->off
    gp02: gp02->off
    grv1: grv1->off
    gyr1: gyr1->off
    hdas: hdas->off
    knud: knud->off
    mbdp: mbdp->off
    mwx1: mwx1->off
    pco2: pco2->off
    pguv: pguv->off
    rtmp: rtmp->off
    s330: s330->off
    seap: seap->off
    svp1: svp1->off
    tsg1: tsg1->off
    tsg2: tsg2->off

  monitor:
    PCOD: PCOD->net
    adcp: adcp->net
    eng1: eng1->net
    gp02: gp02->net
    grv1: grv1->net
    gyr1: gyr1->net
    hdas: hdas->net
    knud: knud->net
    mbdp: mbdp->net
    mwx1: mwx1->net
    pco2: pco2->net
    pguv: pguv->net
    rtmp: rtmp->net
    s330: s330->net
    seap: seap->net
    svp1: svp1->net
    tsg1: tsg1->net
    tsg2: tsg2->net

  log:
    PCOD: PCOD->file/net/db
    adcp: adcp->file/net/db
    eng1: eng1->file/net/db
    gp02: gp02->file/net/db
    grv1: grv1->file/net/db
    gyr1: gyr1->file/net/db
    hdas: hdas->file/net/db
    knud: knud->file/net/db
    mbdp: mbdp->file/net/db
    mwx1: mwx1->file/net/db
    pco2: pco2->file/net/db
    pguv: pguv->file/net/db
    rtmp: rtmp->file/net/db
    s330: s330->file/net/db
    seap: seap->file/net/db
    svp1: svp1->file/net/db
    tsg1: tsg1->file/net/db
    tsg2: tsg2->file/net/db

########################################
default_mode: 'off'

########################################
configs:
  ########
  PCOD->off:
    name: PCOD->off

  PCOD->net:
    name: PCOD->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_PCOD
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: PCOD
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:PCOD'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  PCOD->file/net/db:
    name: PCOD->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_PCOD
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/PCOD/raw/NBP1406_PCOD
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:PCOD'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  adcp->off:
    name: adcp->off

  adcp->net:
    name: adcp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_adcp
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: adcp
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:adcp'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  adcp->file/net/db:
    name: adcp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_adcp
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/adcp/raw/NBP1406_adcp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:adcp'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  eng1->off:
    name: eng1->off

  eng1->net:
    name: eng1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_eng1
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: eng1
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:eng1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  eng1->file/net/db:
    name: eng1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_eng1
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/eng1/raw/NBP1406_eng1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:eng1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  gp02->off:
    name: gp02->off

  gp02->net:
    name: gp02->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_gp02
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: gp02
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gp02'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  gp02->file/net/db:
    name: gp02->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_gp02
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/gp02/raw/NBP1406_gp02
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gp02'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  grv1->off:
    name: grv1->off

  grv1->net:
    name: grv1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_grv1
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: grv1
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:grv1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  grv1->file/net/db:
    name: grv1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_grv1
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/grv1/raw/NBP1406_grv1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:grv1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  gyr1->off:
    name: gyr1->off

  gyr1->net:
    name: gyr1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_gyr1
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: gyr1
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gyr1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  gyr1->file/net/db:
    name: gyr1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_gyr1
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/gyr1/raw/NBP1406_gyr1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gyr1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  hdas->off:
    name: hdas->off

  hdas->net:
    name: hdas->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_hdas
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: hdas
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:hdas'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  hdas->file/net/db:
    name: hdas->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_hdas
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/hdas/raw/NBP1406_hdas
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:hdas'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  knud->off:
    name: knud->off

  knud->net:
    name: knud->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_knud
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: knud
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:knud'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  knud->file/net/db:
    name: knud->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_knud
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/knud/raw/NBP1406_knud
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:knud'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  mbdp->off:
    name: mbdp->off

  mbdp->net:
    name: mbdp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_mbdp
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: mbdp
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mbdp'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  mbdp->file/net/db:
    name: mbdp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_mbdp
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/mbdp/raw/NBP1406_mbdp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mbdp'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  mwx1->off:
    name: mwx1->off

  mwx1->net:
    name: mwx1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_mwx1
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: mwx1
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mwx1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  mwx1->file/net/db:
    name: mwx1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_mwx1
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/mwx1/raw/NBP1406_mwx1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mwx1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  pco2->off:
    name: pco2->off

  pco2->net:
    name: pco2->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_pco2
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: pco2
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pco2'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  pco2->file/net/db:
    name: pco2->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_pco2
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/pco2/raw/NBP1406_pco2
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pco2'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  pguv->off:
    name: pguv->off

  pguv->net:
    name: pguv->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_pguv
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: pguv
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pguv'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  pguv->file/net/db:
    name: pguv->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_pguv
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/pguv/raw/NBP1406_pguv
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pguv'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  rtmp->off:
    name: rtmp->off

  rtmp->net:
    name: rtmp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_rtmp
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: rtmp
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:rtmp'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  rtmp->file/net/db:
    name: rtmp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_rtmp
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/rtmp/raw/NBP1406_rtmp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:rtmp'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  s330->off:
    name: s330->off

  s330->net:
    name: s330->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_s330
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: s330
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:s330'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  s330->file/net/db:
    name: s330->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_s330
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/s330/raw/NBP1406_s330
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:s330'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  seap->off:
    name: seap->off

  seap->net:
    name: seap->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_seap
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: seap
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:seap'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  seap->file/net/db:
    name: seap->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_seap
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/seap/raw/NBP1406_seap
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:seap'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  svp1->off:
    name: svp1->off

  svp1->net:
    name: svp1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_svp1
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: svp1
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:svp1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  svp1->file/net/db:
    name: svp1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_svp1
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/svp1/raw/NBP1406_svp1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:svp1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  tsg1->off:
    name: tsg1->off

  tsg1->net:
    name: tsg1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_tsg1
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: tsg1
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  tsg1->file/net/db:
    name: tsg1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_tsg1
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/tsg1/raw/NBP1406_tsg1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg1'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
  ########
  tsg2->off:
    name: tsg2->off

  tsg2->net:
    name: tsg2->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_tsg2
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: tsg2
    writers:
    - class: UDPWriter      # Send raw NMEA to UDP
      kwargs:
        port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
          class: UDPWriter
          kwargs:
            port: 6225
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg2'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

  tsg2->file/net/db:
    name: tsg2->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /tmp/tty_tsg2
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /var/tmp/log/NBP1406/tsg2/raw/NBP1406_tsg2
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        writers:
        - class: UDPWriter      # Send raw NMEA to UDP
          kwargs:
            port: 6224
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: UDPWriter
          kwargs:
            port: 6225
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg2'
        writers:
          class: UDPWriter
          kwargs:
            port: 6225

